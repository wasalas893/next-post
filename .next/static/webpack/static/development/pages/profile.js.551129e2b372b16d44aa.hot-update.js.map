{"version":3,"file":"static/webpack/static\\development\\pages\\profile.js.551129e2b372b16d44aa.hot-update.js","sources":["webpack:///./pages/profile.js"],"sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport { authInitialProps } from \"../lib/auth\";\nimport { getUser,getPostsByUser,deletePost,likePost,unlikePost,addComment,deleteComment } from '../lib/api';\n\nimport Link from 'next/link';\nimport ProfileTabs from '../components/profile/ProfileTabs';\n\nimport FollowUser from '../components/profile/FollowUser';\nimport DeleteUser from '../components/profile/DeleteUser';\n\nclass Profile extends React.Component {\n  state = {\n    user:null,\n    posts:[],\n    isAuth:false,\n    isFollowing:false,\n    isLoading:true,\n    isDeletingPost:false\n  };\n\n  componentDidMount(){\n    const { userId,auth }=this.props;\n\n   \n\n    getUser(userId).then(async user=>{\n      const isAuth=auth.user._id===userId;\n      const isFollowing=this.checkFollow(auth,user);\n      const posts=await getPostsByUser(userId)\n      this.setState({\n           user,\n           isAuth,\n           posts,\n           isFollowing,\n           isLoading:false\n      })\n    });\n  }\n  checkFollow=(auth,user)=>{\n    return user.followers.findIndex(follower=>follower._id==auth.user._id)>-1\n  }\n  toggleFollow=sendRequest=>{\n    const { userId }=this.props;\n    const { isFollowing }=this.state;\n\n    sendRequest(userId).then(()=>{\n      this.setState({ isFollowing:!isFollowing })\n    })\n\n\n  }\n  handleDeletePost=deletedPost=>{\n    this.setState({ isDeletingPost:true })\n\n    deletePost(deletedPost._id)\n     .then(postData=>{\n       const postIndex=this.state.posts.findIndex(post=>post._id==postData._id)\n       const updatePosts=[\n        ...this.state.posts.slice(0,postIndex),\n        ...this.state.posts.splice(postIndex + 1)\n       ]\n       this.setState({\n         posts:updatePosts,\n         isDeletingPost:false\n       })\n     }).catch(err=>{\n       console.error(err);\n       this.setState({ isDeletingPost:false })\n     })\n\n  };\n\n\n  handleToggleLike= post =>{\n   const { auth }=this.props;\n\n   const isPostLiked=post.likes.includes(auth.user._id)\n   const sendRequest=isPostLiked ? unlikePost : likePost;\n   sendRequest(post._id)\n   .then(postData=>{\n     const postIndex=this.state.posts.findIndex(\n      post=>post._id===postData._id\n     )\n     const updatedPosts=[\n      ...this.state.posts.slice(0,postIndex),\n      postData,\n      ...this.state.posts.splice(postIndex + 1)\n     ]\n     this.setState({ posts: updatedPosts })\n   }).catch(err=>console.error(err))\n  };\n\n  handleAddComment=(postId,text)=>{\n\n    const comment={text};\n\n    addComment(postId,comment)\n\n    .then(postData=>{\n      const postIndex=this.state.posts.findIndex(\n        post=>post._id===postData._id\n      )\n      const updatedPosts=[\n        ...this.state.posts.slice(0,postIndex),\n      postData,\n      ...this.state.posts.splice(postIndex + 1)\n      ]\n      this.setState({ posts:updatedPosts })\n    }).catch(err=>console.error(err))\n  }\n\n  handleDeleteComment=(postId,comment)=>{\n    deleteComment(postId,comment)\n    .then(postData=>{\n      const postIndex=this.state.posts.findIndex(\n        post=>post._id===postData._id\n      );\n      const updatedPosts=[\n        ...this.state.posts.slice(0,postIndex),\n        postData,\n        ...this.state.posts.splice(postIndex + 1)\n      ]\n      this.setState({ posts:updatedPosts })\n    }).catch(err=>console.error(err))\n  }\n\n\n  render() {\n    const {classes,auth}=this.props;\n    const { isLoading,posts,user,isAuth,isFollowing,isDeletingPost }=this.state;\n    \n    return (\n      <Paper className={classes.root} elevation={4}>\n        <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        align=\"center\"\n        className={classes.title}\n        gutterBottom\n        >\n        Profile\n        </Typography>\n        {isLoading ? (\n          <div className={classes.progressContainer}>\n            <CircularProgress\n              className={classes.progress}\n              size={55}\n              thickness={5}\n            />\n          </div>\n        ):(\n          <List dense>\n\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar\n                  src={user.avatar}\n                  className={classes.bigAvatar}\n                />\n              </ListItemAvatar>\n              <ListItemText primary={user.name} secondary={user.email} />\n              \n              {isAuth ?(\n                <ListItemSecondaryAction>\n                  <Link href=\"/edit-profile\">\n                  <a>\n                    <IconButton color=\"primary\">\n                      <Edit/>\n                    </IconButton>\n                    </a>\n                  </Link>\n                  <DeleteUser user={user}/>\n                </ListItemSecondaryAction>\n              ):(\n                <FollowUser\n                  isFollowing={isFollowing}\n                  toggleFollow={this.toggleFollow}\n                />\n              )}\n              \n              \n            </ListItem>\n\n            <Divider/>\n            <ListItem>\n              <ListItemText \n                primary={user.about}\n                secondary={`Joined:${user.createdAt}`}\n              />\n            </ListItem>\n            {/*display users posts,following, and followers*/}\n            <ProfileTabs\n           \n            auth={auth}\n            posts={posts}\n            isDeletingPost={isDeletingPost}\n            handleDeletePost={this.handleDeletePost}\n            handleToggleLike={this.handleToggleLike}\n            handleAddComment={this. handleAddComment}\n            handleDeleteComment={this. handleDeleteComment}\n          />\n          </List>\n        ) }\n      </Paper>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 5,\n    margin: \"auto\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 600\n    }\n  },\n  title: {\n    color: theme.palette.primary.main\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  progressContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60,\n    margin: 10\n  }\n});\nProfile.getInitialProps=authInitialProps(true);\n\nexport default withStyles(styles)(Profile);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AA0BA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAzGA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAYA;;;AA0FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAKA;AACA;AAFA;AAKA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AAIA;AACA;AAFA;AAYA;AACA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;;;;AAnMA;AACA;AAqMA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AArBA;AAAA;AACA;AA0BA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}