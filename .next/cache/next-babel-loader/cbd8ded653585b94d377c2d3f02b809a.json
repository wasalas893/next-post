{"ast":null,"code":"import Router from \"next/router\";\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\nexport const getSessionFromServer = req => {\n  if (req.user) {\n    return {\n      user: req.user\n    };\n  }\n\n  return {};\n};\nexport const getSessionFromClient = () => {\n  if (false) {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\n\nconst redirectUser = (res, path) => {\n  if (res) {\n    res.redirect(302, path);\n    res.finished = true;\n    return {};\n  }\n\n  Router.replace(path);\n  return {};\n};\n\nexport const authInitialProps = isProtectedRoute => ({\n  req,\n  res,\n  query: {\n    userId\n  }\n}) => {\n  const auth = req ? getSessionFromServer(req) : getSessionFromClient();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user;\n\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/signin\") {\n    return redirectUser(res, \"/signin\");\n  }\n\n  return {\n    auth,\n    userId\n  };\n};","map":{"version":3,"sources":["C:/Users/Sunanda/Desktop/next_connector/next-social-connector/lib/auth.js"],"names":["Router","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","user","JSON","stringify","getSessionFromServer","req","getSessionFromClient","window","redirectUser","res","path","redirect","finished","replace","authInitialProps","isProtectedRoute","query","userId","auth","currentPath","url","location","pathname","isAnonymous"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,MAAMC,2BAA2B,GAAG,UAApC;AAEA,OAAO,MAAMC,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAQ,GAAEF,2BAA4B,MAAKG,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAqB,GAAhE;AACD,CAFM;AAIP,OAAO,MAAMG,oBAAoB,GAAGC,GAAG,IAAI;AACzC,MAAIA,GAAG,CAACJ,IAAR,EAAc;AACZ,WAAO;AAAEA,MAAAA,IAAI,EAAEI,GAAG,CAACJ;AAAZ,KAAP;AACD;;AACD,SAAO,EAAP;AACD,CALM;AAOP,OAAO,MAAMK,oBAAoB,GAAG,MAAM;AACxC,aAAmC;AACjC,UAAML,IAAI,GAAGM,MAAM,CAACR,2BAAD,CAAN,IAAuC,EAApD;AACA,WAAO;AAAEE,MAAAA;AAAF,KAAP;AACD;;AACD,SAAO;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CANM;;AAQP,MAAMO,YAAY,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClC,MAAID,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACE,QAAJ,CAAa,GAAb,EAAkBD,IAAlB;AACAD,IAAAA,GAAG,CAACG,QAAJ,GAAe,IAAf;AACA,WAAO,EAAP;AACD;;AACDd,EAAAA,MAAM,CAACe,OAAP,CAAeH,IAAf;AACA,SAAO,EAAP;AACD,CARD;;AAUA,OAAO,MAAMI,gBAAgB,GAAGC,gBAAgB,IAAI,CAAC;AACnDV,EAAAA,GADmD;AAEnDI,EAAAA,GAFmD;AAGnDO,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAH4C,CAAD,KAI9C;AACJ,QAAMC,IAAI,GAAGb,GAAG,GAAGD,oBAAoB,CAACC,GAAD,CAAvB,GAA+BC,oBAAoB,EAAnE;AACA,QAAMa,WAAW,GAAGd,GAAG,GAAGA,GAAG,CAACe,GAAP,GAAab,MAAM,CAACc,QAAP,CAAgBC,QAApD;AACA,QAAMrB,IAAI,GAAGiB,IAAI,CAACjB,IAAlB;AACA,QAAMsB,WAAW,GAAG,CAACtB,IAArB;;AACA,MAAIc,gBAAgB,IAAIQ,WAApB,IAAmCJ,WAAW,KAAK,SAAvD,EAAkE;AAChE,WAAOX,YAAY,CAACC,GAAD,EAAM,SAAN,CAAnB;AACD;;AACD,SAAO;AAAES,IAAAA,IAAF;AAAQD,IAAAA;AAAR,GAAP;AACD,CAbM","sourcesContent":["import Router from \"next/router\";\n\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\n\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\n\nexport const getSessionFromServer = req => {\n  if (req.user) {\n    return { user: req.user };\n  }\n  return {};\n};\n\nexport const getSessionFromClient = () => {\n  if (typeof window !== \"undefined\") {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return { user };\n  }\n  return { user: {} };\n};\n\nconst redirectUser = (res, path) => {\n  if (res) {\n    res.redirect(302, path);\n    res.finished = true;\n    return {};\n  }\n  Router.replace(path);\n  return {};\n};\n\nexport const authInitialProps = isProtectedRoute => ({\n  req,\n  res,\n  query: { userId }\n}) => {\n  const auth = req ? getSessionFromServer(req) : getSessionFromClient();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user;\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/signin\") {\n    return redirectUser(res, \"/signin\");\n  }\n  return { auth, userId };\n};\n"]},"metadata":{},"sourceType":"module"}