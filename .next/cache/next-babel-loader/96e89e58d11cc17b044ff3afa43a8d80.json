{"ast":null,"code":"import { SheetsRegistry } from \"jss\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"; //import createGenerateClassName from \"@material-ui/core/styles/createGenerateClassName\";\n// import teal from \"@material-ui/core/colors/teal\";\n// import blue from \"@material-ui/core/colors/blue\";\n// import pink from \"@material-ui/core/colors/pink\";\n// import red from \"@material-ui/core/colors/red\";\n\n/* Create your app color theme here */\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    suppressDeprecationWarnings: true\n  },\n  palette: {// primary: teal,\n    // secondary: red,\n    // favoriteIcon: pink[200],\n    // commentIcon: blue[300],\n    // type: \"light\"\n  }\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName()\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!false) {\n    return createPageContext();\n  } // Reuse context on the client-side.\n\n\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}","map":{"version":3,"sources":["C:/Users/Sunanda/Desktop/next_connector/next-social-connector/lib/getPageContext.js"],"names":["SheetsRegistry","createMuiTheme","theme","typography","useNextVariants","suppressDeprecationWarnings","palette","createPageContext","sheetsManager","Map","sheetsRegistry","generateClassName","createGenerateClassName","getPageContext","global","__INIT_MATERIAL_UI__"],"mappings":"AAAA,SAASA,cAAT,QAA+B,KAA/B;AACA,OAAOC,cAAP,MAA2B,yCAA3B,C,CACA;AACA;AACA;AACA;AACA;;AAEA;;AACA,MAAMC,KAAK,GAAGD,cAAc,CAAC;AAC3BE,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE,IADP;AAEVC,IAAAA,2BAA2B,EAAE;AAFnB,GADe;AAK3BC,EAAAA,OAAO,EAAE,CACP;AACA;AACA;AACA;AACA;AALO;AALkB,CAAD,CAA5B;;AAcA,SAASC,iBAAT,GAA6B;AAC3B,SAAO;AACLL,IAAAA,KADK;AAEL;AACAM,IAAAA,aAAa,EAAE,IAAIC,GAAJ,EAHV;AAIL;AACAC,IAAAA,cAAc,EAAE,IAAIV,cAAJ,EALX;AAML;AACAW,IAAAA,iBAAiB,EAAEC,uBAAuB;AAPrC,GAAP;AASD;;AAED,eAAe,SAASC,cAAT,GAA0B;AACvC;AACA;AACA,MAAI,MAAJ,EAAsB;AACpB,WAAON,iBAAiB,EAAxB;AACD,GALsC,CAOvC;;;AACA,MAAI,CAACO,MAAM,CAACC,oBAAZ,EAAkC;AAChCD,IAAAA,MAAM,CAACC,oBAAP,GAA8BR,iBAAiB,EAA/C;AACD;;AAED,SAAOO,MAAM,CAACC,oBAAd;AACD","sourcesContent":["import { SheetsRegistry } from \"jss\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n//import createGenerateClassName from \"@material-ui/core/styles/createGenerateClassName\";\n// import teal from \"@material-ui/core/colors/teal\";\n// import blue from \"@material-ui/core/colors/blue\";\n// import pink from \"@material-ui/core/colors/pink\";\n// import red from \"@material-ui/core/colors/red\";\n\n/* Create your app color theme here */\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    suppressDeprecationWarnings: true\n  },\n  palette: {\n    // primary: teal,\n    // secondary: red,\n    // favoriteIcon: pink[200],\n    // commentIcon: blue[300],\n    // type: \"light\"\n  }\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName()\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}\n"]},"metadata":{},"sourceType":"module"}